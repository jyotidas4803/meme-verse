<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Meme World - Laugh Unlimited üòÇ</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Luckiest+Guy&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Luckiest+Guy&family=Bangers&display=swap" rel="stylesheet">

    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        funky: ['Luckiest Guy', 'cursive'],
                        meme: ['Bangers', 'cursive']
                    },
                    backgroundImage: {
                        'hero-bg': "url('/images/cat-landing.jpeg')",
                    },
                }
            }
        }
    </script>

    <style>
        /* Hide scrollbar */
        ::-webkit-scrollbar {
            display: none;
        }
        html {
            scrollbar-width: none;
        }

        /* Fullscreen Scroll Snapping */
        body {
            scroll-snap-type: y mandatory;
            overflow-y: scroll;
            height: 100vh;
            background: #000;
            color: white;
        }

        /* Meme Card: Full Screen */
        .meme-card {
            scroll-snap-align: start;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0; /* Hide initially */
            transition: opacity 0.5s ease-in-out;
        }

        /* Only active meme card should be visible */
        .meme-card.active {
            opacity: 1;
        }

        /* Fixed Blurry Background */
        .bg-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100vh;
            background: url('/images/cat-landing.jpeg') center/cover no-repeat;
            filter: blur(10px);
            z-index: -1;
        }

        /* Glassmorphism effect */
        .glass {
            background: rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 1rem;
            box-shadow: 0px 4px 15px rgba(255, 255, 255, 0.1);
            width: 95vw;  /* Responsive width */
            max-width: 600px;  /* Bigger cards */
        }

        /* Like, Comment, Share Button Effects */
        .btn {
            transition: transform 0.2s ease, color 0.2s ease;
        }
        .btn:hover {
            transform: scale(1.1);
        }
    </style>
</head>
<body>
    
    <!-- Fixed Background Blur -->
    <div class="bg-container">
        <header class="p-4 flex justify-between bg-gray-800 text-white">
            <h1 class="text-xl">Meme World</h1>
            <a href="/logout" class="text-red-400 hover:text-red-600">Logout</a>
        </header>
        
    </div>

    <!-- Meme Feed Section -->
    <section id="memeFeed" class="w-full flex flex-col items-center"></section>

    <script>
        let page = 1;  // API pagination

        async function fetchMemes() {
            const response = await fetch(`https://meme-api.com/gimme/10`);
            const data = await response.json();
            return data.memes;  // Returns an array of memes
        }

        function createMemeCard(meme, index) {
            return `
                <div class="meme-card w-full flex flex-col items-center justify-center ${index === 0 ? 'active' : ''}">
                    <div class="glass overflow-hidden">
                        
                        <!-- Post Header (Profile) -->
                        <div class="flex items-center p-4 border-b border-gray-700">
                            <img src="https://randomuser.me/api/portraits/men/${Math.floor(Math.random() * 99)}.jpg" class="w-12 h-12 rounded-full mr-3">
                            <span class="font-semibold">${meme.author}</span>
                        </div>

                        <!-- Meme Image (Full View) -->
                        <img src="${meme.url}" class="w-full h-[75vh] object-cover">

                        <!-- Post Actions -->
                        <div class="flex justify-between p-4 text-3xl text-gray-300">
                            <button onclick="likeMeme(this)" class="btn hover:text-red-500">‚ù§Ô∏è</button>
                            <button onclick="showComments()" class="btn hover:text-gray-600">üí¨</button>
                            <button onclick="shareMeme('${meme.url}')" class="btn hover:text-yellow-500">üì§</button>
                        </div>

                        <!-- Caption -->
                        <div class="p-4">
                            <p class="text-sm">
                                <span class="font-bold">${meme.author}</span> üòÇüî•
                            </p>
                        </div>
                    </div>
                </div>
            `;
        }

        async function loadMemes() {
            const memes = await fetchMemes();
            memes.forEach((meme, index) => {
                document.getElementById("memeFeed").innerHTML += createMemeCard(meme, index);
            });

            // Activate Scroll Logic
            addScrollEffect();
        }

        function likeMeme(button) {
            button.classList.toggle("text-red-500");
            button.classList.toggle("scale-125");
        }

        function shareMeme(url) {
            navigator.clipboard.writeText(url);
            alert("Meme link copied! üì§");
        }

        function addScrollEffect() {
            const memeCards = document.querySelectorAll(".meme-card");
            let currentIndex = 0;

            window.addEventListener("scroll", () => {
                let scrollTop = window.scrollY;

                memeCards.forEach((card, index) => {
                    let cardTop = card.offsetTop;
                    let cardHeight = card.clientHeight;

                    if (scrollTop >= cardTop - cardHeight / 2) {
                        memeCards[currentIndex].classList.remove("active");
                        card.classList.add("active");
                        currentIndex = index;
                    }
                });
            });
        }

        // Load memes on page load
        loadMemes();
    </script>

</body>
</html>


<!-- see this i have created this can u have more ideas to make it more coool -->